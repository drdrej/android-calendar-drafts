package com.touchableheroes.drafts.calendar.dao;

import java.util.HashMap;
import java.util.Map;
import java.util.TimeZone;

import android.content.ContentValues;
import android.provider.CalendarContract.Events;

/**
 * Simple Event-implementation.
 * 
 * @author A. Siebert, ask@touchableheroes.com
 */
public class Event {

	private final Map<String, Object> map = new HashMap<String, Object>();
	private EventId id;
	
	public void setString(final String key, final String val) {
		map.put(key, val);
	}

	public void setLong(final String key, final long val) {
		map.put(key, val);
	}

	public EventId setId(final long id) {
		this.id = EventId.create(id);
		return this.id;
	}

	/**
	 * Factory-method to build content-values for update, based on this instance.
	 * At this moment supports only START-END-events.
	 * 
	 * @return never NULL
	 */
	public ContentValues newUpdateContentValues() {
		final ContentValues values = new ContentValues();
		
		addContentValueLong(values, "calendarID", Events.CALENDAR_ID);
		addContentValueLong(values, "start", Events.DTSTART);
		addContentValueLong(values, "end", Events.DTEND);
		
		
		
		values.put(Events.TITLE, this.map.get( "start" ));
		values.put(Events.DESCRIPTION, this.map.get( "start" ));
		
		final TimeZone zone = TimeZone.getDefault();
		values.put(Events.EVENT_TIMEZONE, zone.getID());		
		
		values.put(Events.ALL_DAY, 0);
		values.remove( Events._ID);
		return values;
	}
	
	public void addContentValue(final ContentValues values, final String key, final String cursorKey) {
		final String val = String.valueOf(this.map.get( key ));
		
		if( val != null )
			values.put(cursorKey, val);
	}
	
	public void addContentValueLong(final ContentValues values, final String key, final String cursorKey) {
		final Long val = (Long) this.map.get( key );
		
		if( val != null )
			values.put(cursorKey, val);
	}

	public void addContentValueInt(final ContentValues values, final String key, final String cursorKey) {
		final Integer val = (Integer) this.map.get( key );
		
		if( val != null )
			values.put(cursorKey, val);
	}
}
